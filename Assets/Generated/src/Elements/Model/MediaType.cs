/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.1.0-SNAPSHOT - 50c43394a8fba7f7778a8f9dd84eae40d370b7bc - 2025-04-18 16:50:54
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// MediaType
    /// </summary>
    [DataContract(Name = "MediaType")]
    public partial class MediaType
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MediaType" /> class.
        /// </summary>
        /// <param name="type">type.</param>
        /// <param name="subtype">subtype.</param>
        /// <param name="parameters">parameters.</param>
        /// <param name="wildcardType">wildcardType.</param>
        /// <param name="wildcardSubtype">wildcardSubtype.</param>
        public MediaType(string type = default(string), string subtype = default(string), Dictionary<string, string> parameters = default(Dictionary<string, string>), bool wildcardType = default(bool), bool wildcardSubtype = default(bool))
        {
            this.Type = type;
            this.Subtype = subtype;
            this.Parameters = parameters;
            this.WildcardType = wildcardType;
            this.WildcardSubtype = wildcardSubtype;
        }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets Subtype
        /// </summary>
        [DataMember(Name = "subtype", EmitDefaultValue = false)]
        public string Subtype { get; set; }

        /// <summary>
        /// Gets or Sets Parameters
        /// </summary>
        [DataMember(Name = "parameters", EmitDefaultValue = false)]
        public Dictionary<string, string> Parameters { get; set; }

        /// <summary>
        /// Gets or Sets WildcardType
        /// </summary>
        [DataMember(Name = "wildcardType", EmitDefaultValue = true)]
        public bool WildcardType { get; set; }

        /// <summary>
        /// Gets or Sets WildcardSubtype
        /// </summary>
        [DataMember(Name = "wildcardSubtype", EmitDefaultValue = true)]
        public bool WildcardSubtype { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MediaType {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Subtype: ").Append(Subtype).Append("\n");
            sb.Append("  Parameters: ").Append(Parameters).Append("\n");
            sb.Append("  WildcardType: ").Append(WildcardType).Append("\n");
            sb.Append("  WildcardSubtype: ").Append(WildcardSubtype).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
