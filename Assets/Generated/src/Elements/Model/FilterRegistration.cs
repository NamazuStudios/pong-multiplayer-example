/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.1.0-SNAPSHOT - 50c43394a8fba7f7778a8f9dd84eae40d370b7bc - 2025-04-18 16:50:54
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// FilterRegistration
    /// </summary>
    [DataContract(Name = "FilterRegistration")]
    public partial class FilterRegistration
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FilterRegistration" /> class.
        /// </summary>
        /// <param name="servletNameMappings">servletNameMappings.</param>
        /// <param name="urlPatternMappings">urlPatternMappings.</param>
        /// <param name="name">name.</param>
        /// <param name="className">className.</param>
        /// <param name="initParameters">initParameters.</param>
        public FilterRegistration(List<string> servletNameMappings = default(List<string>), List<string> urlPatternMappings = default(List<string>), string name = default(string), string className = default(string), Dictionary<string, string> initParameters = default(Dictionary<string, string>))
        {
            this.ServletNameMappings = servletNameMappings;
            this.UrlPatternMappings = urlPatternMappings;
            this.Name = name;
            this.ClassName = className;
            this.InitParameters = initParameters;
        }

        /// <summary>
        /// Gets or Sets ServletNameMappings
        /// </summary>
        [DataMember(Name = "servletNameMappings", EmitDefaultValue = false)]
        public List<string> ServletNameMappings { get; set; }

        /// <summary>
        /// Gets or Sets UrlPatternMappings
        /// </summary>
        [DataMember(Name = "urlPatternMappings", EmitDefaultValue = false)]
        public List<string> UrlPatternMappings { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets ClassName
        /// </summary>
        [DataMember(Name = "className", EmitDefaultValue = false)]
        public string ClassName { get; set; }

        /// <summary>
        /// Gets or Sets InitParameters
        /// </summary>
        [DataMember(Name = "initParameters", EmitDefaultValue = false)]
        public Dictionary<string, string> InitParameters { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FilterRegistration {\n");
            sb.Append("  ServletNameMappings: ").Append(ServletNameMappings).Append("\n");
            sb.Append("  UrlPatternMappings: ").Append(UrlPatternMappings).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ClassName: ").Append(ClassName).Append("\n");
            sb.Append("  InitParameters: ").Append(InitParameters).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
