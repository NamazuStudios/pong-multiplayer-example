/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.4.0-SNAPSHOT - 81098c5a3ac1746b0e4a2cfaace91f16392f2bbb - 2025-10-12 18:26:26
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// ModelVersion
    /// </summary>
    [DataContract(Name = "varVersion")]
    public partial class ModelVersion
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModelVersion" /> class.
        /// </summary>
        /// <param name="varVersion">varVersion.</param>
        /// <param name="revision">revision.</param>
        /// <param name="timestamp">timestamp.</param>
        public ModelVersion(string varVersion = default(string), string revision = default(string), string timestamp = default(string))
        {
            this.VarVersion = varVersion;
            this.Revision = revision;
            this.Timestamp = timestamp;
        }

        /// <summary>
        /// Gets or Sets VarVersion
        /// </summary>
        [DataMember(Name = "version", EmitDefaultValue = false)]
        public string VarVersion { get; set; }

        /// <summary>
        /// Gets or Sets Revision
        /// </summary>
        [DataMember(Name = "revision", EmitDefaultValue = false)]
        public string Revision { get; set; }

        /// <summary>
        /// Gets or Sets Timestamp
        /// </summary>
        [DataMember(Name = "timestamp", EmitDefaultValue = false)]
        public string Timestamp { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ModelVersion {\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("  Revision: ").Append(Revision).Append("\n");
            sb.Append("  Timestamp: ").Append(Timestamp).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
