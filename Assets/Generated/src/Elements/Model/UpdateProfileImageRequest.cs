/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.4.0-SNAPSHOT - 81098c5a3ac1746b0e4a2cfaace91f16392f2bbb - 2025-10-12 18:26:26
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// Represents a request to update an image profile.
    /// </summary>
    [DataContract(Name = "UpdateProfileImageRequest")]
    public partial class UpdateProfileImageRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateProfileImageRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UpdateProfileImageRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateProfileImageRequest" /> class.
        /// </summary>
        /// <param name="mimeType">MimeType of image (required).</param>
        public UpdateProfileImageRequest(string mimeType = default(string))
        {
            // to ensure "mimeType" is required (not null)
            if (mimeType == null)
            {
                throw new ArgumentNullException("mimeType is a required property for UpdateProfileImageRequest and cannot be null");
            }
            this.MimeType = mimeType;
        }

        /// <summary>
        /// MimeType of image
        /// </summary>
        /// <value>MimeType of image</value>
        [DataMember(Name = "mimeType", IsRequired = true, EmitDefaultValue = true)]
        public string MimeType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateProfileImageRequest {\n");
            sb.Append("  MimeType: ").Append(MimeType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
