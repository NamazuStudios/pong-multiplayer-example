/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.1.0-SNAPSHOT - 50c43394a8fba7f7778a8f9dd84eae40d370b7bc - 2025-04-18 16:50:54
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// Configuration for the iOS Application Configuration
    /// </summary>
    [DataContract(Name = "IosApplicationConfiguration")]
    public partial class IosApplicationConfiguration
    {
        /// <summary>
        /// The category for the application configuration.
        /// </summary>
        /// <value>The category for the application configuration.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CategoryEnum
        {
            /// <summary>
            /// Enum MATCHMAKING for value: MATCHMAKING
            /// </summary>
            [EnumMember(Value = "MATCHMAKING")]
            MATCHMAKING = 1,

            /// <summary>
            /// Enum PSNPS4 for value: PSN_PS4
            /// </summary>
            [EnumMember(Value = "PSN_PS4")]
            PSNPS4 = 2,

            /// <summary>
            /// Enum PSNVITA for value: PSN_VITA
            /// </summary>
            [EnumMember(Value = "PSN_VITA")]
            PSNVITA = 3,

            /// <summary>
            /// Enum IOSAPPSTORE for value: IOS_APP_STORE
            /// </summary>
            [EnumMember(Value = "IOS_APP_STORE")]
            IOSAPPSTORE = 4,

            /// <summary>
            /// Enum ANDROIDGOOGLEPLAY for value: ANDROID_GOOGLE_PLAY
            /// </summary>
            [EnumMember(Value = "ANDROID_GOOGLE_PLAY")]
            ANDROIDGOOGLEPLAY = 5,

            /// <summary>
            /// Enum FACEBOOK for value: FACEBOOK
            /// </summary>
            [EnumMember(Value = "FACEBOOK")]
            FACEBOOK = 6,

            /// <summary>
            /// Enum FIREBASE for value: FIREBASE
            /// </summary>
            [EnumMember(Value = "FIREBASE")]
            FIREBASE = 7
        }


        /// <summary>
        /// The category for the application configuration.
        /// </summary>
        /// <value>The category for the application configuration.</value>
        [DataMember(Name = "category", IsRequired = true, EmitDefaultValue = true)]
        public CategoryEnum Category { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="IosApplicationConfiguration" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected IosApplicationConfiguration() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="IosApplicationConfiguration" /> class.
        /// </summary>
        /// <param name="id">The database assigned ID for the application configuration..</param>
        /// <param name="category">The category for the application configuration. (required).</param>
        /// <param name="uniqueIdentifier">The application-configuration specific unique ID.  (Varies by ConfigurationCategory).</param>
        /// <param name="parent">parent (required).</param>
        /// <param name="productBundles">The list of product bundles that may be rewarded upon successful IAP transactions..</param>
        /// <param name="applicationId">applicationId (required).</param>
        public IosApplicationConfiguration(string id = default(string), CategoryEnum category = default(CategoryEnum), string uniqueIdentifier = default(string), Application parent = default(Application), List<ProductBundle> productBundles = default(List<ProductBundle>), string applicationId = default(string))
        {
            this.Category = category;
            // to ensure "parent" is required (not null)
            if (parent == null)
            {
                throw new ArgumentNullException("parent is a required property for IosApplicationConfiguration and cannot be null");
            }
            this.Parent = parent;
            // to ensure "applicationId" is required (not null)
            if (applicationId == null)
            {
                throw new ArgumentNullException("applicationId is a required property for IosApplicationConfiguration and cannot be null");
            }
            this.ApplicationId = applicationId;
            this.Id = id;
            this.UniqueIdentifier = uniqueIdentifier;
            this.ProductBundles = productBundles;
        }

        /// <summary>
        /// The database assigned ID for the application configuration.
        /// </summary>
        /// <value>The database assigned ID for the application configuration.</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// The application-configuration specific unique ID.  (Varies by ConfigurationCategory)
        /// </summary>
        /// <value>The application-configuration specific unique ID.  (Varies by ConfigurationCategory)</value>
        [DataMember(Name = "uniqueIdentifier", EmitDefaultValue = false)]
        public string UniqueIdentifier { get; set; }

        /// <summary>
        /// Gets or Sets Parent
        /// </summary>
        [DataMember(Name = "parent", IsRequired = true, EmitDefaultValue = true)]
        public Application Parent { get; set; }

        /// <summary>
        /// The list of product bundles that may be rewarded upon successful IAP transactions.
        /// </summary>
        /// <value>The list of product bundles that may be rewarded upon successful IAP transactions.</value>
        [DataMember(Name = "productBundles", EmitDefaultValue = false)]
        public List<ProductBundle> ProductBundles { get; set; }

        /// <summary>
        /// Gets or Sets ApplicationId
        /// </summary>
        [DataMember(Name = "applicationId", IsRequired = true, EmitDefaultValue = true)]
        public string ApplicationId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IosApplicationConfiguration {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Category: ").Append(Category).Append("\n");
            sb.Append("  UniqueIdentifier: ").Append(UniqueIdentifier).Append("\n");
            sb.Append("  Parent: ").Append(Parent).Append("\n");
            sb.Append("  ProductBundles: ").Append(ProductBundles).Append("\n");
            sb.Append("  ApplicationId: ").Append(ApplicationId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
