/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.1.0-SNAPSHOT - 50c43394a8fba7f7778a8f9dd84eae40d370b7bc - 2025-04-18 16:50:54
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// ServletConfig
    /// </summary>
    [DataContract(Name = "ServletConfig")]
    public partial class ServletConfig
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServletConfig" /> class.
        /// </summary>
        /// <param name="servletName">servletName.</param>
        /// <param name="servletContext">servletContext.</param>
        /// <param name="initParameterNames">initParameterNames.</param>
        public ServletConfig(string servletName = default(string), ServletContext servletContext = default(ServletContext), Object initParameterNames = default(Object))
        {
            this.ServletName = servletName;
            this.ServletContext = servletContext;
            this.InitParameterNames = initParameterNames;
        }

        /// <summary>
        /// Gets or Sets ServletName
        /// </summary>
        [DataMember(Name = "servletName", EmitDefaultValue = false)]
        public string ServletName { get; set; }

        /// <summary>
        /// Gets or Sets ServletContext
        /// </summary>
        [DataMember(Name = "servletContext", EmitDefaultValue = false)]
        public ServletContext ServletContext { get; set; }

        /// <summary>
        /// Gets or Sets InitParameterNames
        /// </summary>
        [DataMember(Name = "initParameterNames", EmitDefaultValue = false)]
        public Object InitParameterNames { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServletConfig {\n");
            sb.Append("  ServletName: ").Append(ServletName).Append("\n");
            sb.Append("  ServletContext: ").Append(ServletContext).Append("\n");
            sb.Append("  InitParameterNames: ").Append(InitParameterNames).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
